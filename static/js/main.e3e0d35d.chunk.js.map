{"version":3,"sources":["Todo.js","App.js","index.js"],"names":["Todo","_ref","todo","toggle","destroy","id","title","isDone","react_default","a","createElement","className","type","onClick","checked","htmlFor","defaultProps","App","state","allToggled","showContent","isDoneTodoes","value","todoes","handleFilterClear","_this","setState","prevState","Object","toConsumableArray","handleFilterCompleted","filter","handleFilterActive","map","objectSpread","length","toggleAll","addTask","event","key","target","concat","Date","now","destroyCompleted","handleChange","_this2","this","_this$state","resultingList","src_Todo","onSubmit","preventDefault","onChange","placeholder","onKeyDown","href","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e3e0d35d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Todo = ({ todo, toggle, destroy }) => {\n  const { id, title, isDone } = todo;\n\n  return (\n    <li className=\"todo\">\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={id}\n          onClick={() => toggle(id)}\n          checked={isDone}\n        />\n        <label\n          htmlFor={id}\n          className={isDone && 'completed-item'}\n        >\n          {title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => destroy(id)}\n        />\n      </div>\n    </li>\n  );\n};\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    idDone: PropTypes.bool.isRequired,\n  }).isRequired,\n  toggle: PropTypes.func,\n  destroy: PropTypes.func,\n};\n\nTodo.defaultProps = {\n  toggle: null,\n  destroy: null,\n};\n\nexport default Todo;\n\n/*\n\nNot yet implemented\n\nconst myStorage = window.localStorage;\n\nwindow.onbeforeunload = closingCode;\nfunction closingCode() {\n  // do something...\n  return null;\n}\n\n */\n\n/*   componentDidMount() {\n   const myLocaleStorage = myStorage.getItem('todoes');\n\n   if (myLocaleStorage === 'undefined') {\n     this.setState({\n       todoes: JSON.parse(myLocaleStorage),\n     })\n   }\n }\n\n componentWillUnmount() {\n   myStorage.setItem('todoes', JSON.stringify(this.state.todoes));\n } */\n","import React from 'react';\nimport Todo from './Todo';\n\nclass App extends React.Component {\n  state = {\n    allToggled: false,\n    showContent: false,\n    isDoneTodoes: false,\n    value: '',\n    todoes: [],\n  }\n\n  handleFilterClear = () => {\n    this.setState(prevState => ({\n      todoes: [...prevState.todoes],\n    }));\n  }\n\n  handleFilterCompleted = () => {\n    this.setState(prevState => ({\n      todoes: [...prevState.todoes.filter(todo => todo.isDone)],\n    }));\n  }\n\n  handleFilterActive = () => {\n    this.setState(prevState => ({\n      todoes: [...prevState.todoes.filter(todo => !todo.isDone)],\n    }));\n  }\n\n  toggle = (id) => {\n    this.setState(prevState => ({\n      todoes: prevState.todoes.map((todo) => {\n        if (todo.id !== id) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          isDone: !todo.isDone,\n        };\n      }),\n      isDoneTodoes: !prevState.todoes.filter(todo => todo.isDone).length > 0,\n    }));\n  }\n\n  toggleAll = () => {\n    this.setState(prevState => ({\n      todoes: prevState.todoes.map((todo) => {\n        if (prevState.allToggled === false) {\n          return {\n            ...todo,\n            isDone: true,\n          };\n        }\n\n        return {\n          ...todo,\n          isDone: false,\n        };\n      }),\n      allToggled: !prevState.allToggled,\n      isDoneTodoes: !prevState.todoes.filter(todo => todo.isDone).length > 0,\n    }));\n  }\n\n  addTask = (event) => {\n    if (event.key === 'Enter' && event.target.value.length > 0) {\n      this.setState(prevState => ({\n        todoes: [...prevState.todoes, {\n          id: Date.now(),\n          title: prevState.value,\n          isDone: false,\n        }],\n        value: '',\n        showContent: true,\n      }));\n    }\n  }\n\n  destroy = (id) => {\n    this.setState(prevState => ({\n      todoes: prevState.todoes.filter(todo => todo.id !== id),\n      showContent: !(prevState.todoes.length < 2),\n      isDoneTodoes: !prevState.todoes.filter(todo => todo.isDone).length > 0,\n    }));\n  }\n\n  destroyCompleted = () => {\n    this.setState(prevState => ({\n      todoes: prevState.todoes.filter(todo => todo.isDone === false),\n      isDoneTodoes: false,\n    }));\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      value: event.target.value,\n    });\n  }\n\n  render() {\n    const {\n      showContent,\n      isDoneTodoes,\n      todoes,\n      value,\n    } = this.state;\n    const resultingList = todoes.length !== 0\n\n      ? todoes.map(todo => (\n        <Todo todo={todo} toggle={this.toggle} destroy={this.destroy} />\n      ))\n      : '';\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <form onSubmit={event => event.preventDefault()}>\n            <input\n              className=\"new-todo\"\n              onChange={this.handleChange}\n              value={value}\n              placeholder=\"What needs to be done?\"\n              onKeyDown={this.addTask}\n            />\n\n          </form>\n\n        </header>\n\n        {showContent\n          && (\n            <div className=\"content-group\">\n\n              <section className=\"main\">\n                <input\n                  type=\"checkbox\"\n                  id=\"toggle-all\"\n                  className=\"toggle-all\"\n                  onClick={this.toggleAll}\n                />\n                <label\n                  htmlFor=\"toggle-all\"\n                  id=\"label\"\n                >\n                  Mark all as complete\n                </label>\n\n                <ul className=\"todo-list\">\n\n                  {resultingList}\n\n                </ul>\n              </section>\n\n              <footer className=\"footer\">\n                <span className=\"todo-count\">\n                  {`${todoes.filter(todo => (!todo.isDone)).length} items left`}\n                </span>\n\n                <ul className=\"filters\">\n                  <li>\n                    <a\n                      href=\"#/\"\n                      className=\"selected\"\n                      onClick={this.handleFilterClear}\n                    >\n                      All\n                    </a>\n                  </li>\n\n                  <li>\n                    <a\n                      href=\"#/active\"\n                      onClick={this.handleFilterActive}\n                    >\n                      Active\n                    </a>\n                  </li>\n\n                  <li>\n                    <a\n                      href=\"#/completed\"\n                      onClick={this.handleFilterCompleted}\n                    >\n                      Completed\n                    </a>\n                  </li>\n                </ul>\n                {isDoneTodoes && (\n                  <button\n                    type=\"button\"\n                    onClick={this.destroyCompleted}\n                    className=\"clear-completed\"\n                  >\n                    Clear completed\n                  </button>\n                )}\n\n              </footer>\n            </div>)\n        }\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}