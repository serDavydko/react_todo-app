{"version":3,"sources":["Todo.js","Footer.js","Header.js","App.js","index.js"],"names":["Todo","_ref","todo","toggle","destroy","id","title","isDone","react_default","a","createElement","className","type","onClick","checked","htmlFor","defaultProps","Footer","todoes","filterBy","changeFilter","destroyCompleted","concat","filter","length","href","some","Header","state","value","handleChange","event","_this","setState","target","handleSubmit","preventDefault","props","addTask","onSubmit","this","onChange","placeholder","React","Component","App","allToggled","showContent","items","field","item","prevState","map","Object","objectSpread","toggleAll","task","toConsumableArray","Date","now","_this2","_this$state","todosCopy","resultingList","src_Todo","key","src_Header","src_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2fa6905f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Todo = ({ todo, toggle, destroy }) => {\n  const { id, title, isDone } = todo;\n\n  return (\n    <li className=\"todo\">\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={id}\n          onClick={() => toggle(id)}\n          checked={isDone}\n        />\n        <label\n          htmlFor={id}\n          className={isDone && 'completed-item'}\n        >\n          {title}\n\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            id={id}\n            onClick={() => toggle(id)}\n            checked={isDone}\n          />\n        </label>\n\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => destroy(id)}\n        />\n      </div>\n    </li>\n  );\n};\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    idDone: PropTypes.bool.isRequired,\n  }).isRequired,\n  toggle: PropTypes.func,\n  destroy: PropTypes.func,\n};\n\nTodo.defaultProps = {\n  toggle: null,\n  destroy: null,\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Footer = ({\n  todoes,\n  filterBy,\n  changeFilter,\n  destroyCompleted,\n}) => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      {`${todoes.filter(todo => (!todo.isDone)).length} items left`}\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={filterBy === 'All' && 'selected'}\n          onClick={() => changeFilter('All')}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          className={filterBy === 'Active' && 'selected'}\n          onClick={() => changeFilter('Active')}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={filterBy === 'Completed' && 'selected'}\n          onClick={() => changeFilter('Completed')}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n\n    {todoes.some(todo => todo.isDone) && (\n      <button\n        type=\"button\"\n        onClick={destroyCompleted}\n        className=\"clear-completed\"\n      >\n        Clear completed\n      </button>\n    )}\n\n  </footer>\n);\n\nFooter.propTypes = {\n  todoes: PropTypes.shape({\n    idDone: PropTypes.bool,\n  }).isRequired,\n  filterBy: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func,\n  destroyCompleted: PropTypes.func,\n};\n\nFooter.defaultProps = {\n  changeFilter: null,\n  destroyCompleted: null,\n};\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  state = {\n    value: '',\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      value: event.target.value,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.addTask(this.state.value);\n    this.setState({\n      value: '',\n    });\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={this.handleSubmit}>\n\n          <input\n            className=\"new-todo\"\n            onChange={this.handleChange}\n            value={this.state.value}\n            placeholder=\"What needs to be done?\"\n          />\n\n          <button type=\"submit\" className=\"input-button\" />\n        </form>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  addTask: PropTypes.func,\n};\n\nHeader.defaultProps = {\n  addTask: '',\n};\n\nexport default Header;\n","import React from 'react';\nimport Todo from './Todo';\nimport Footer from './Footer';\nimport Header from './Header';\n\nclass App extends React.Component {\n  state = {\n    allToggled: false,\n    showContent: false,\n    todoes: [],\n    filterBy: 'All',\n  }\n\n  changeFilter = (filter) => {\n    this.setState({\n      filterBy: filter,\n    });\n  };\n\n  filter = (items, field) => {\n    switch (field) {\n      case 'All':\n        return items;\n      case 'Active':\n        return items.filter(item => !item.isDone);\n      case 'Completed':\n        return items.filter(item => item.isDone);\n      default:\n        return items;\n    }\n  }\n\n  toggle = (id) => {\n    this.setState(prevState => ({\n      todoes: prevState.todoes.map((todo) => {\n        if (todo.id !== id) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          isDone: !todo.isDone,\n        };\n      }),\n    }));\n  }\n\n  toggleAll = () => {\n    this.setState(prevState => ({\n      todoes: prevState.todoes\n        .map(todo => ({ ...todo, isDone: !prevState.allToggled })),\n      allToggled: !prevState.allToggled,\n    }));\n  }\n\n  addTask = (task) => {\n    if (task.length > 0) {\n      this.setState(prevState => ({\n        todoes: [...prevState.todoes, {\n          id: Date.now(),\n          title: task,\n          isDone: false,\n        }],\n        showContent: true,\n      }));\n    }\n  }\n\n  destroy = (id) => {\n    this.setState(prevState => ({\n      todoes: prevState.todoes.filter(todo => todo.id !== id),\n      showContent: !(prevState.todoes.length < 2),\n    }));\n  }\n\n  destroyCompleted = () => {\n    this.setState(prevState => ({\n      todoes: prevState.todoes.filter(todo => !todo.isDone),\n    }));\n  }\n\n  render() {\n    const {\n      showContent,\n      todoes,\n      filterBy,\n    } = this.state;\n\n    const todosCopy = this.filter(todoes, filterBy);\n\n    const resultingList = todoes.length !== 0\n      ? todosCopy.map(todo => (\n        <Todo\n          todo={todo}\n          key={todo.id}\n          toggle={this.toggle}\n          destroy={this.destroy}\n        />\n      ))\n      : '';\n\n    return (\n      <section className=\"todoapp\">\n        <Header addTask={this.addTask} />\n\n        {showContent && (\n          <div className=\"content-group\">\n\n            <section className=\"main\">\n              <input\n                type=\"checkbox\"\n                id=\"toggle-all\"\n                className=\"toggle-all\"\n                onClick={this.toggleAll}\n              />\n              <label\n                htmlFor=\"toggle-all\"\n                id=\"label\"\n              >\n                Mark all as complete\n              </label>\n\n              <ul className=\"todo-list\">\n\n                {resultingList}\n\n              </ul>\n            </section>\n\n            <Footer\n              todoes={todoes}\n              filterBy={filterBy}\n              changeFilter={this.changeFilter}\n              destroyCompleted={this.destroyCompleted}\n            />\n          </div>)\n        }\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}